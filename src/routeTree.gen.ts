/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WineryImport } from './routes/winery'
import { Route as FirstRouteImport } from './routes/firstRoute'
import { Route as IndexImport } from './routes/index'
import { Route as WineryWineryIdImport } from './routes/winery.$wineryId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const WineryRoute = WineryImport.update({
  path: '/winery',
  getParentRoute: () => rootRoute,
} as any)

const FirstRouteRoute = FirstRouteImport.update({
  path: '/firstRoute',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WineryWineryIdRoute = WineryWineryIdImport.update({
  path: '/$wineryId',
  getParentRoute: () => WineryRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/firstRoute': {
      id: '/firstRoute'
      path: '/firstRoute'
      fullPath: '/firstRoute'
      preLoaderRoute: typeof FirstRouteImport
      parentRoute: typeof rootRoute
    }
    '/winery': {
      id: '/winery'
      path: '/winery'
      fullPath: '/winery'
      preLoaderRoute: typeof WineryImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/winery/$wineryId': {
      id: '/winery/$wineryId'
      path: '/$wineryId'
      fullPath: '/winery/$wineryId'
      preLoaderRoute: typeof WineryWineryIdImport
      parentRoute: typeof WineryImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  FirstRouteRoute,
  WineryRoute: WineryRoute.addChildren({ WineryWineryIdRoute }),
  AboutLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/firstRoute",
        "/winery",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/firstRoute": {
      "filePath": "firstRoute.tsx"
    },
    "/winery": {
      "filePath": "winery.tsx",
      "children": [
        "/winery/$wineryId"
      ]
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/winery/$wineryId": {
      "filePath": "winery.$wineryId.tsx",
      "parent": "/winery"
    }
  }
}
ROUTE_MANIFEST_END */
